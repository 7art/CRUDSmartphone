{"version":3,"sources":["api.js","actions/phones.js","reducers/phones.js","actions/modal.js","reducers/modal.js","reducers/index.js","components/PhoneCard.js","components/Spinner.js","pages/PhoneList.js","components/reduxForm/validate.js","components/reduxForm/asyncValidate.js","components/reduxForm/AddPhoneForm.js","components/AddPhoneModal.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["axios","create","baseURL","actionTypes","initialState","list","isLoading","ModalActionTypes","modal","combineReducers","phones","state","action","type","payload","map","phone","id","filter","modalReducer","form","formReducer","PhoneCard","index","title","price","description","image","dispatch","useDispatch","useState","editMode","setEditMode","inputs","setInputs","updateFormValue","target","name","value","inputObj","toggleEditMode","mode","Card","Img","variant","src","Body","Title","Form","Control","required","placeholder","onChange","e","Text","as","rows","Footer","className","onClick","a","data","API","put","then","res","error","console","log","updatePhone","delete","BootsrtapSpinner","Container","Row","Spinner","animation","PhoneList","useSelector","loading","CardDeck","key","validate","values","errors","isNaN","Number","asyncValidate","isEmpty","obj","get","response","count","Promise","resolve","reject","renderField","input","label","meta","touched","asyncValidating","reduxForm","asyncBlurFields","props","handleSubmit","pristine","reset","submitting","handleClose","onSubmit","Field","component","disabled","AddPhoneModal","show","setShow","Modal","onHide","Header","post","catch","createPhone","Navbar","expand","bg","Brand","href","Toggle","Collapse","App","fluid","Col","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","reducers","applyMiddleware","thunk","reduxLogger","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d32bce61.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: ``,\r\n});\r\n","import API from \"../api\";\r\nexport const actionTypes = {\r\n  CREATE_PHONE: \"CREATE_PHONE\",\r\n  GET_PHONE: \"GET_PHONE\",\r\n  UPDATE_PHONE: \"UPDATE_PHONE\",\r\n  DELETE_PHONE: \"DELETE_PHONE\",\r\n};\r\n\r\nexport const createPhone = (phone) => async (dispatch) => {\r\n  try {\r\n    const data = {\r\n      title: phone.title,\r\n      price: +phone.price,\r\n      description: phone.description,\r\n      image: phone.image || \" \",\r\n    };\r\n\r\n    API.post(`/phones`, data).then((res) => {\r\n      const id = res.data.id;\r\n      API.get(`/phones/${id}`)\r\n        .then((res) => {\r\n          dispatch({ type: actionTypes.CREATE_PHONE, payload: res.data });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getPhones = () => async (dispatch) => {\r\n  try {\r\n    API.get(`/phones`).then((res) => {\r\n      dispatch({ type: actionTypes.GET_PHONE, payload: res.data });\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const updatePhone = (phone, index) => async (dispatch) => {\r\n  try {\r\n    const data = {\r\n      id: index,\r\n      title: phone.title,\r\n      price: +phone.price,\r\n      description: phone.description,\r\n      image: phone.image || \" \",\r\n    };\r\n\r\n    API.put(`/phones/${index}`, data).then((res) => {\r\n      return dispatch({ type: actionTypes.UPDATE_PHONE, payload: data });\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const deletePhone = (id) => async (dispatch) => {\r\n  try {\r\n    API.delete(`/phones/${id}`).then((res) => {\r\n      dispatch({ type: actionTypes.DELETE_PHONE, payload: id });\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const phoneExist = (title) => {\r\n  return API.get(`/search?title=${title}`).then((response) => {\r\n    return response.data;\r\n  });\r\n};\r\n","import { actionTypes } from \"../actions/phones\";\r\n\r\nconst initialState = {\r\n  list: [],\r\n  isLoading: true,\r\n};\r\n\r\nexport default function phones(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.GET_PHONE:\r\n      return {\r\n        ...state,\r\n        list: [...state.list, ...action.payload],\r\n        isLoading: false,\r\n      };\r\n    case actionTypes.CREATE_PHONE:\r\n      return {\r\n        ...state,\r\n        list: [...state.list, action.payload],\r\n      };\r\n\r\n    case actionTypes.UPDATE_PHONE:\r\n      return {\r\n        ...state,\r\n        list: state.list.map((phone) =>\r\n          phone.id === action.payload.id ? { ...action.payload } : phone\r\n        ),\r\n      };\r\n\r\n    case actionTypes.DELETE_PHONE:\r\n      return {\r\n        ...state,\r\n        list: state.list.filter((phone) => phone.id !== action.payload),\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n}\r\n","export const ModalActionTypes = {\r\n  SHOW_MODAL: \"SHOW_MODAL\",\r\n  HIDE_MODAL: \"HIDE_MODAL\",\r\n};\r\n\r\nexport function showModal() {\r\n  return (dispatch) => {\r\n    return dispatch({\r\n      type: ModalActionTypes.SHOW_MODAL,\r\n    });\r\n  };\r\n}\r\n\r\nexport function hideModal() {\r\n  return (dispatch) => {\r\n    return dispatch({\r\n      type: ModalActionTypes.HIDE_MODAL,\r\n    });\r\n  };\r\n}\r\n","import { ModalActionTypes } from \"../actions/modal\";\r\n\r\nconst initialState = {\r\n  modal: false,\r\n};\r\n\r\nexport default function modalReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ModalActionTypes.SHOW_MODAL:\r\n      return {\r\n        ...state,\r\n        modal: true,\r\n      };\r\n    case ModalActionTypes.HIDE_MODAL:\r\n      return {\r\n        ...state,\r\n        modal: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport phones from \"./phones\";\r\nimport modalReducer from \"./modal\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\n\r\nexport default combineReducers({\r\n  phones,\r\n  modalReducer,\r\n  form: formReducer,\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { updatePhone, deletePhone } from \"../actions/phones\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nconst PhoneCard = ({ id: index, title, price, description, image }) => {\r\n  const dispatch = useDispatch();\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [inputs, setInputs] = useState({\r\n    title,\r\n    price,\r\n    description,\r\n    image,\r\n  });\r\n\r\n  const updateFormValue = ({ target: { name, value } }) =>\r\n    setInputs((inputObj) => ({ ...inputObj, [name]: value }));\r\n\r\n  const toggleEditMode = () => setEditMode((mode) => !mode);\r\n\r\n  const updatePhoneData = () => {\r\n    dispatch(updatePhone({ ...inputs }, index));\r\n    toggleEditMode();\r\n  };\r\n\r\n  const deletePhoneFromList = () => {\r\n    dispatch(deletePhone(index));\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Img variant=\"top\" src={image} />\r\n      <Card.Body>\r\n        <Card.Title>\r\n          {!editMode && title}\r\n          {editMode && (\r\n            <Form.Control\r\n              type=\"text\"\r\n              required\r\n              value={inputs.title}\r\n              name=\"title\"\r\n              placeholder=\"Title\"\r\n              onChange={(e) => updateFormValue(e)}\r\n            />\r\n          )}\r\n        </Card.Title>\r\n        <Card.Text>\r\n          {!editMode && price + `$`}\r\n          {editMode && (\r\n            <Form.Control\r\n              type=\"text\"\r\n              required\r\n              value={inputs.price}\r\n              name=\"price\"\r\n              placeholder=\"Price\"\r\n              onChange={(e) => updateFormValue(e)}\r\n            />\r\n          )}\r\n        </Card.Text>\r\n        <Card.Text>\r\n          {!editMode && description}\r\n          {editMode && (\r\n            <Form.Control\r\n              required\r\n              as=\"textarea\"\r\n              rows={3}\r\n              value={inputs.description}\r\n              name=\"description\"\r\n              placeholder=\"Description\"\r\n              onChange={(e) => updateFormValue(e)}\r\n            />\r\n          )}\r\n        </Card.Text>\r\n\r\n        {editMode && (\r\n          <Card.Text>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={inputs.image}\r\n              name=\"image\"\r\n              placeholder=\"image URL\"\r\n              onChange={(e) => updateFormValue(e)}\r\n            />\r\n          </Card.Text>\r\n        )}\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        <small className=\"text-muted\">\r\n          {!editMode && (\r\n            <>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-info mr-2\"\r\n                onClick={toggleEditMode}\r\n              >\r\n                Edit\r\n              </button>\r\n            </>\r\n          )}\r\n\r\n          {editMode && (\r\n            <>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-success  mr-2\"\r\n                onClick={updatePhoneData}\r\n              >\r\n                Update\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-danger\"\r\n                onClick={deletePhoneFromList}\r\n              >\r\n                Delete\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-secondary mr-2\"\r\n                onClick={toggleEditMode}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </>\r\n          )}\r\n        </small>\r\n      </Card.Footer>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PhoneCard;\r\n","import React from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nconst BootsrtapSpinner = () => {\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Spinner animation=\"border\" variant=\"info\" />\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BootsrtapSpinner;\r\n","import React from \"react\";\r\n\r\nimport PhoneCard from \"../components/PhoneCard\";\r\nimport CardDeck from \"react-bootstrap/CardDeck\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Spinner from \"../components/Spinner\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PhoneList = () => {\r\n  const [phones, loading] = useSelector((state) => [\r\n    state.phones.list,\r\n    state.phones.isLoading,\r\n  ]);\r\n\r\n  return (\r\n    <Container>\r\n      {loading && <Spinner />}\r\n      <CardDeck>\r\n        {phones.map((phone) => (\r\n          <PhoneCard {...phone} key={phone.id} />\r\n        ))}\r\n      </CardDeck>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PhoneList;\r\n","const validate = (values) => {\r\n  const errors = {};\r\n  if (!values.title) {\r\n    errors.title = \"Required\";\r\n  }\r\n  if (!values.price) {\r\n    errors.price = \"Required\";\r\n  }\r\n  if (!values.description) {\r\n    errors.description = \"Required\";\r\n  }\r\n  if (isNaN(Number(values.price))) {\r\n    errors.price = \"Must be a number\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default validate;\r\n","import { phoneExist } from \"../../actions/phones\";\r\n\r\nconst asyncValidate = async (values) => {\r\n  const errors = {};\r\n  const isEmpty = (obj) => {\r\n    for (let key in obj) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  const existTitle = await phoneExist(values.title).then((res) => res.count);\r\n\r\n  if (existTitle) {\r\n    errors.title = \"That title is exist!\";\r\n  }\r\n\r\n  return new Promise((resolve, reject) => {\r\n    if (!isEmpty(errors)) {\r\n      reject(errors);\r\n    }\r\n\r\n    resolve();\r\n  });\r\n};\r\n\r\nexport default asyncValidate;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport validate from \"./validate\";\r\nimport asyncValidate from \"./asyncValidate\";\r\n\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  meta: { asyncValidating, touched, error },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <div>\r\n      <input\r\n        {...input}\r\n        type={type}\r\n        placeholder={label}\r\n        className={`form-control ${\r\n          touched ? (error ? \" is-invalid\" : \" is-valid\") : \"\"\r\n        }`}\r\n      />\r\n      {touched && error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst AddPhoneForm = (props) => {\r\n  const { handleSubmit, pristine, reset, submitting, handleClose } = props;\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Field name=\"title\" type=\"text\" component={renderField} label=\"Title\" />\r\n      <Field name=\"price\" type=\"text\" component={renderField} label=\"Price\" />\r\n      <Field\r\n        name=\"description\"\r\n        type=\"text\"\r\n        component={renderField}\r\n        label=\"Description\"\r\n      />\r\n      <Field name=\"image\" type=\"text\" component={renderField} label=\"Image\" />\r\n      <div>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-primary\"\r\n          disabled={pristine || submitting}\r\n        >\r\n          Add Phone\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary\"\r\n          disabled={pristine || submitting}\r\n          onClick={reset}\r\n        >\r\n          Clear Values\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary\"\r\n          disabled={submitting}\r\n          onClick={handleClose}\r\n        >\r\n          Close\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default reduxForm({\r\n  form: \"addPhone\",\r\n  validate,\r\n  asyncValidate,\r\n  asyncBlurFields: [\"title\"],\r\n})(AddPhoneForm);\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createPhone } from \"../actions/phones\";\r\nimport { hideModal } from \"../actions/modal\";\r\nimport AddPhoneForm from \"./reduxForm/AddPhoneForm\";\r\n\r\nconst AddPhoneModal = ({ modal }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [show, setShow] = useState(modal);\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  const addPhone = (phone) => {\r\n    dispatch(createPhone(phone));\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose} animation={true}>\r\n      <Modal.Header>\r\n        <Modal.Title>New Phone</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <AddPhoneForm onSubmit={addPhone} handleClose={handleClose} />\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddPhoneModal;\r\n","import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport AddPhoneModal from \"./AddPhoneModal\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { showModal } from \"../actions/modal\";\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n  const modal = useSelector((state) => state.modalReducer.modal);\r\n  return (\r\n    <>\r\n      <Navbar expand=\"lg\" variant=\"light\" bg=\"light\">\r\n        <Container>\r\n          <Navbar.Brand href=\"/\">CRUD</Navbar.Brand>\r\n          <Navbar.Toggle />\r\n          <Navbar.Collapse className=\"justify-content-end\">\r\n            <Navbar.Text>\r\n              <button\r\n                className=\"btn btn-sucsess\"\r\n                onClick={() => {\r\n                  dispatch(showModal());\r\n                }}\r\n              >\r\n                ADD PHONE\r\n              </button>\r\n            </Navbar.Text>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      {modal && <AddPhoneModal modal={modal} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import \"./App.css\";\r\nimport PhoneList from \"./pages/PhoneList\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Header from \"./components/Header\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <PhoneList />\r\n      <Container fluid>\r\n        <Row>\r\n          <Col className=\"text-center pt-3 pb-3\">© 2021</Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reduxLogger from \"redux-logger\";\r\nimport reducers from \"./reducers/index\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { getPhones } from \"./actions/phones\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk, reduxLogger));\r\n\r\nstore.dispatch(getPhones());\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}